@model IPagedList<Audiobook>
@{
    var series = Model.FirstOrDefault().Series;
    var SeriesCount = AudiobookService.GetSeriesCount();
    var allSeries = await AudiobookService.GetBookSeries();
    var seriesBlurb = await AudiobookService.GetBlurbBySeries(series);
    ViewData["Title"] = $"Book Series - {series}";

        <style>
        .list-group {
            max-height: 500px;
            margin-bottom: 10px;
            overflow-y: scroll;
            -webkit-overflow-scrolling: touch;
        }
    </style>

}

@section Head
{
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
    <meta name="description" content="Audiobooks by @series">
    <meta name="keywords" content="@series, @Model.FirstOrDefault().Author, Audiobooks">
    <meta property="og:url" content="@Url.Action("BookSeries", "Home", new { name = series }, "http")" />
    <meta property="og:type" content="website" />
    <meta property="og:title" content="@ViewData["Title"] - Audiobooks" />
    <meta property="og:description" content="@series series Audiobooks" />
    <meta name="author" content="http://www.audio-bux.link">
    @if (Model.Any())
    {
        <meta property="og:image" content="@Model.FirstOrDefault().ImageUrl" />
    }
    else
    {
        <meta property="og:image" content="http://www.audio-bux.link/images/background.jpg" />
    }
}

<div class="container bg-white">
    <section class="service-2 section">
        <div class="container">
            <div class="row">

                <div class="col-12">
                    <!-- section title -->
                    <div class="title text-center">
                        <h2>Series: @series</h2>

                    </div>
                    <!--Blurb-->
                    <div class="row">
                        @if (seriesBlurb != null)
                        {
                            <div class="p-3">
                                <p class="textlarge">@seriesBlurb.Description</p>
                            </div>

                        }
                    </div>
                    <div class="border"></div>

                    <!-- /section title -->
                </div>


            </div>
            <div class=" row flex-sm-row-reverse">

                <div class="col-md-8">
                    <div class="row text-center">


                        @foreach (var item in Model)
                        {
                            <partial name="_BookBox" for="@item" />
                        }
                    </div>
                    <div class="row mt-2 mr-1 d-flex justify-content-end">
                        @Html.PagedListPager((IPagedList)Model, page => Url.Action("BookSeries", new { page, name = series }), new PagedListRenderOptions
                   {
                       DisplayLinkToIndividualPages = true,
                       DisplayPageCountAndCurrentLocation = false,
                       MaximumPageNumbersToDisplay = 3,
                       DisplayEllipsesWhenNotShowingAllPageNumbers = false,
                       UlElementClasses = new[] { "pagination", "justify-content-center" },
                       LiElementClasses = new[] { "page-item" },
                       PageClasses = new[] { "page-link" }

                   })
                    </div>
                </div>
                <div class="col-md-4 text-center">
                    <div class="col">
                        <ul class="list-group">
                            <li class="list-group-item">
                                <h4>Series (@SeriesCount series)</h4>
                            </li>
                            @foreach (var item in allSeries.OrderBy(e=>e))
                            {
                                if (item != null)
                                {
                                    var BookCount = await AudiobookService.GetSeriesBookCount(item);

                                    <li class="list-group-item">
                                        <a asp-action="Bookseries" asp-controller="Home" asp-route-name="@item">
                                            @item (@BookCount @(BookCount == 1 ? "book" : "books"))
                                        </a>
                                    </li>
                                }
                            }
                            <li class="list-group-item">
                                <a asp-action="Browse" asp-controller="Home">All Audiobooks</a>
                            </li>
                        </ul>
                    </div>
                </div>
            </div>
        </div> <!-- End container -->
    </section>
</div>
