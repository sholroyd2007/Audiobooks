@model IPagedList<Audiobook>
@{
    Layout = "_LayoutDetail";
    var categories = await AudiobookService.GetCategories();
    ViewData["Title"] = "Category";
}

@section Head
{
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
    <meta name="description" content="Audiobooks by Category">
    <meta name="keywords" content="Browse, Categories, Audiobooks">
    <meta property="og:url" content="@Url.Action("Category", "Home", new { id = categories.FirstOrDefault().Id }, "http")" />
    <meta property="og:type" content="website" />
    <meta property="og:title" content="@ViewData["Title"] - Audiobooks" />
    <meta property="og:description" content="Browse Audiobooks By Category" />
    <meta name="author" content="http://www.audio-bux.link">
    @if (Model.Any())
    {
        <meta property="og:image" content="@Model.FirstOrDefault().ImageUrl" />
    }
    else
    {
        <meta property="og:image" content="http://www.audio-bux.link/images/background.jpg" />
    }
}

<div class="container bg-white">
    <section class="service-2 section">
        <div class="container">
            <div class="row">

                <div class="col-12">
                    <!-- section title -->
                    <div class="title text-center">
                        @if (Model.Count() != 0)
                        {
                            <h2>Category: @Model?.FirstOrDefault()?.Category?.Name</h2>
                            <div class="border"></div>
                        }
                        else
                        {
                            <h2>Category: Empty</h2>
                            <div class="border"></div>
                        }

                    </div>
                    <!-- /section title -->
                </div>




            </div>
            <div class="row flex-sm-row-reverse">
                <div class="col-md-8">
                    <div class="row text-center">
                        @if (Model.Count() != 0)
                        {
                            @foreach (var item in Model)
                            {
                                <partial name="_BookBox" for="@item" />
                            }

                        }
                        else
                        {
                            <h1>There are no Audiobooks in your selected category yet. Please choose again.</h1>
                        }
                    </div>
                    @if (Model.Count() != 0)
                    {
                        <div class="row mt-2 mr-1 d-flex justify-content-end">
                            @Html.PagedListPager(Model, page => Url.Action("Category", new { page, id = Model.FirstOrDefault().Category.Id }), new PagedListRenderOptions
                       {
                           DisplayLinkToIndividualPages = true,
                           DisplayPageCountAndCurrentLocation = false,
                           MaximumPageNumbersToDisplay = 3,
                           DisplayEllipsesWhenNotShowingAllPageNumbers = false,
                           UlElementClasses = new[] { "pagination", "justify-content-center" },
                           LiElementClasses = new[] { "page-item" },
                           PageClasses = new[] { "page-link" }
                       })
                        </div>
                    }

                </div>
                <div class="col-md-4 text-center">
                    @{
                        <partial name="_Categories" model="categories" />
                    }
                </div>
            </div>
        </div> <!-- End container -->
    </section>
</div>



